{
	"name": "df_dim_hechos_ordenes_detalles",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ordenes_detalles_csv",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dim_hechos_ordenes_detalles",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "filter1"
				},
				{
					"name": "sort1"
				},
				{
					"name": "aggregate1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          order_details_id as integer,",
				"          order_id as integer,",
				"          pizza_id as string,",
				"          quantity as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 filter(!isNull(order_details_id)) ~> filter1",
				"filter1 sort(asc(order_details_id, true)) ~> sort1",
				"sort1 aggregate(groupBy(order_details_id),",
				"     each(match(name != \"order_details_id\"), $$ = first($$))) ~> aggregate1",
				"aggregate1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id_orden_detalle as integer,",
				"          id_orden as integer,",
				"          id_pizza as string,",
				"          cantidad as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          id_orden_detalle = order_details_id,",
				"          id_orden = order_id,",
				"          id_pizza = pizza_id,",
				"          cantidad = quantity",
				"     )) ~> sink1"
			]
		}
	}
}