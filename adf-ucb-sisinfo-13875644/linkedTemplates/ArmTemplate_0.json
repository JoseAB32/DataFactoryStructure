{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-ucb-sisinfo-13875644"
		},
		"Datos_pizzas_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Datos_pizzas'"
		},
		"dw_pizzas_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'dw_pizzas'"
		},
		"dw_pizzas_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sql-ucb-sisinfo-13875644.database.windows.net"
		},
		"dw_pizzas_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "dw-pizzas"
		},
		"dw_pizzas_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "Jose"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Datos_pizzas')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Datos_pizzas_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dw_pizzas')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('dw_pizzas_properties_typeProperties_server')]",
					"database": "[parameters('dw_pizzas_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('dw_pizzas_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('dw_pizzas_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dim_fecha')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dw_pizzas",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "dw"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "fecha",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_FECHA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dw_pizzas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dim_hechos_ordenes_detalles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dw_pizzas",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "dw"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_orden_detalle",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_orden",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_pizza",
						"type": "varchar"
					},
					{
						"name": "cantidad",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "HECHOS_ORDENES_DETALLES"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dw_pizzas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dim_hora')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dw_pizzas",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "dw"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "hora",
						"type": "time",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_HORA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dw_pizzas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dim_orden')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dw_pizzas",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "dw"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_orden",
						"type": "int",
						"precision": 10
					},
					{
						"name": "fecha",
						"type": "date"
					},
					{
						"name": "hora",
						"type": "time",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_ORDEN"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dw_pizzas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dim_pizza')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dw_pizzas",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "dw"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_pizza",
						"type": "varchar"
					},
					{
						"name": "id_tipo",
						"type": "varchar"
					},
					{
						"name": "tamano",
						"type": "varchar"
					},
					{
						"name": "precio",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_PIZZA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dw_pizzas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dim_tipo_pizza')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dw_pizzas",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "dw"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_tipo",
						"type": "varchar"
					},
					{
						"name": "nombre",
						"type": "varchar"
					},
					{
						"name": "categoria",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_TIPOS_PIZZA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dw_pizzas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ordenes_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Datos_pizzas",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "datos"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "orders.csv",
						"container": "datos-pizzas"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "order_id",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "time",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Datos_pizzas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ordenes_detalles_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Datos_pizzas",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "datos"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "order_details.csv",
						"container": "datos-pizzas"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "order_details_id",
						"type": "String"
					},
					{
						"name": "order_id",
						"type": "String"
					},
					{
						"name": "pizza_id",
						"type": "String"
					},
					{
						"name": "quantity",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Datos_pizzas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pizza_tipos_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Datos_pizzas",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "datos"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "pizza_types.csv",
						"container": "datos-pizzas"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "\"pizza_type_id,\"\"name\"\"",
						"type": "String"
					},
					{
						"name": "\"\"category\"\"\";;;;;;",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Datos_pizzas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pizzas_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Datos_pizzas",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "datos"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "pizzas.csv",
						"container": "datos-pizzas"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "pizza_id",
						"type": "String"
					},
					{
						"name": "pizza_type_id",
						"type": "String"
					},
					{
						"name": "size",
						"type": "String"
					},
					{
						"name": "price",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Datos_pizzas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_dim_fecha')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ordenes_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dim_fecha",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "filter1"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "sort1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          order_id as string,",
						"          date as date 'yyyy-MM-dd',",
						"          time as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 select(mapColumn(",
						"          date",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 filter(!isNull(date)) ~> filter1",
						"filter1 aggregate(groupBy(date),",
						"     each(match(name!=\"date\"), $$ = first($$))) ~> aggregate1",
						"aggregate1 sort(asc(date, true)) ~> sort1",
						"sort1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          fecha as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          fecha = date",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ordenes_csv')]",
				"[concat(variables('factoryId'), '/datasets/dim_fecha')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_dim_hora')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ordenes_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dim_hora",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "sort1"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          order_id as string,",
						"          date as date,",
						"          time as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 select(mapColumn(",
						"          time",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(hora = toTimestamp(concat('1900-01-01 ', time), 'yyyy-MM-dd HH:mm:ss')) ~> derivedColumn1",
						"derivedColumn1 sort(asc(hora, true)) ~> sort1",
						"sort1 aggregate(groupBy(hora),",
						"     each(match(name!=\"hora\"), $$ = first($$))) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          hora as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          hora",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ordenes_csv')]",
				"[concat(variables('factoryId'), '/datasets/dim_hora')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_dim_orden')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ordenes_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dim_orden",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "select1"
						},
						{
							"name": "filter1"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          order_id as integer,",
						"          date as date 'yyyy-MM-dd',",
						"          time as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 derive(hora = toTimestamp(concat('1900-01-01 ', time), 'yyyy-MM-dd HH:mm:ss')) ~> derivedColumn1",
						"derivedColumn1 select(mapColumn(",
						"          order_id,",
						"          date,",
						"          hora",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 filter(!isNull(order_id)) ~> filter1",
						"filter1 aggregate(groupBy(order_id),",
						"     each(match(name!=\"order_id\"), $$ = first($$))) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_orden as integer,",
						"          fecha as date,",
						"          hora as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id_orden = order_id,",
						"          fecha = date,",
						"          hora",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ordenes_csv')]",
				"[concat(variables('factoryId'), '/datasets/dim_orden')]"
			]
		}
	]
}